name: Main branch and PRs check

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          # Install editable mode to fix issue pytest not found module 
          # https://github.com/pytest-dev/pytest/issues/2287#issuecomment-284200894
          python -m pip install --upgrade pip
          pip install -r src/msteams_con/requirements-dev.txt
          pip install -e ".[dev]"
      - name: Super-linter
        uses: super-linter/super-linter@v7.1.0
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_PYINK: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_JSON: false
          VALIDATE_JSON_PRETTIER: false
          VALIDATE_MARKDOWN_PRETTIER: false
          # FIX_MARKDOWN: true
      # - name: Commit and push linting fixes
      #   # Run only on:
      #   # - Pull requests
      #   # - Not on the default branch
      #   if: >
      #     github.event_name == 'pull_request' &&
      #     github.ref_name != github.event.repository.default_branch
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
      #     commit_message: "chore: fix linting issues"
      #     commit_user_name: super-linter
      #     commit_user_email: super-linter@super-linter.dev
      - name: Ruff check
        run: ruff check --output-format=github .
      - name: Set env
        run: |
          echo "MSTEAMS_WEBHOOK=${{ secrets.MSTEAMS_WEBHOOK }}" >> "$GITHUB_ENV"
      - name: Test with pytest
        run: pytest tests --doctest-modules --cov=src --junitxml=junit.xml --cov-report=xml --cov-report=html
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
